{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hi\\\\Documents\\\\reactjs\\\\firstproject\\\\ecommerce\\\\src\\\\components\\\\CartItems\\\\CartItems.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Word list suitable for kids\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wordList = ['CAT', 'DOG', 'SUN', 'MOON', 'BALL'];\nconst generateGrid = (rows, cols) => {\n  const grid = [];\n  for (let i = 0; i < rows; i++) {\n    const row = [];\n    for (let j = 0; j < cols; j++) {\n      const letter = String.fromCharCode(65 + Math.floor(Math.random() * 6)); // Using letters A to F for simplicity\n      row.push(letter);\n    }\n    grid.push(row);\n  }\n  return grid;\n};\nconst CartItems = () => {\n  _s();\n  const [grid, setGrid] = useState(generateGrid(8, 8)); // Reduced grid size for simplicity\n  const [selectedLetters, setSelectedLetters] = useState([]);\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(60);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer(prevTimer => prevTimer - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleSelection = (row, col) => {\n    const newSelectedLetters = [...selectedLetters, {\n      row,\n      col\n    }];\n    setSelectedLetters(newSelectedLetters);\n    const selectedWord = newSelectedLetters.map(({\n      row,\n      col\n    }) => grid[row][col]).join('');\n    wordList.forEach(word => {\n      if (selectedWord === word) {\n        setScore(prevScore => prevScore + word.length);\n        setSelectedLetters([]);\n      }\n    });\n  };\n  const containerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '50px'\n  };\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(8, 40px)',\n    // Reduced grid columns for simplicity\n    gap: '2px'\n  };\n  const rowStyle = {\n    display: 'flex'\n  };\n  const cellStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '40px',\n    height: '40px',\n    backgroundColor: '#fff',\n    border: '1px solid #ccc',\n    cursor: 'pointer',\n    fontSize: '18px'\n  };\n  const selectedCellStyle = {\n    backgroundColor: '#aaddff'\n  };\n  const gameInfoStyle = {\n    marginTop: '20px',\n    fontSize: '18px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: rowStyle,\n        children: row.map((letter, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...cellStyle,\n            ...(selectedLetters.some(cell => cell.row === rowIndex && cell.col === colIndex) ? selectedCellStyle : {})\n          },\n          onClick: () => handleSelection(rowIndex, colIndex),\n          children: letter\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gameInfoStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Time: \", timer, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(CartItems, \"S8KLYCo3rQzSJartwBRFmEqHEQU=\");\n_c = CartItems;\nexport default CartItems;\nvar _c;\n$RefreshReg$(_c, \"CartItems\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","wordList","generateGrid","rows","cols","grid","i","row","j","letter","String","fromCharCode","Math","floor","random","push","CartItems","_s","setGrid","selectedLetters","setSelectedLetters","score","setScore","timer","setTimer","interval","setInterval","prevTimer","clearInterval","handleSelection","col","newSelectedLetters","selectedWord","map","join","forEach","word","prevScore","length","containerStyle","display","flexDirection","alignItems","marginTop","gridStyle","gridTemplateColumns","gap","rowStyle","cellStyle","justifyContent","width","height","backgroundColor","border","cursor","fontSize","selectedCellStyle","gameInfoStyle","style","children","rowIndex","colIndex","some","cell","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hi/Documents/reactjs/firstproject/ecommerce/src/components/CartItems/CartItems.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Word list suitable for kids\r\nconst wordList = ['CAT', 'DOG', 'SUN', 'MOON', 'BALL'];\r\n\r\nconst generateGrid = (rows, cols) => {\r\n  const grid = [];\r\n  for (let i = 0; i < rows; i++) {\r\n    const row = [];\r\n    for (let j = 0; j < cols; j++) {\r\n      const letter = String.fromCharCode(65 + Math.floor(Math.random() * 6)); // Using letters A to F for simplicity\r\n      row.push(letter);\r\n    }\r\n    grid.push(row);\r\n  }\r\n  return grid;\r\n};\r\n\r\nconst CartItems = () => {\r\n  const [grid, setGrid] = useState(generateGrid(8, 8)); // Reduced grid size for simplicity\r\n  const [selectedLetters, setSelectedLetters] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [timer, setTimer] = useState(60);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTimer((prevTimer) => prevTimer - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleSelection = (row, col) => {\r\n    const newSelectedLetters = [...selectedLetters, { row, col }];\r\n    setSelectedLetters(newSelectedLetters);\r\n\r\n    const selectedWord = newSelectedLetters.map(({ row, col }) => grid[row][col]).join('');\r\n\r\n    wordList.forEach((word) => {\r\n      if (selectedWord === word) {\r\n        setScore((prevScore) => prevScore + word.length);\r\n        setSelectedLetters([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const containerStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '50px',\r\n  };\r\n\r\n  const gridStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(8, 40px)', // Reduced grid columns for simplicity\r\n    gap: '2px',\r\n  };\r\n\r\n  const rowStyle = {\r\n    display: 'flex',\r\n  };\r\n\r\n  const cellStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '40px',\r\n    height: '40px',\r\n    backgroundColor: '#fff',\r\n    border: '1px solid #ccc',\r\n    cursor: 'pointer',\r\n    fontSize: '18px',\r\n  };\r\n\r\n  const selectedCellStyle = {\r\n    backgroundColor: '#aaddff',\r\n  };\r\n\r\n  const gameInfoStyle = {\r\n    marginTop: '20px',\r\n    fontSize: '18px',\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={gridStyle}>\r\n        {grid.map((row, rowIndex) => (\r\n          <div key={rowIndex} style={rowStyle}>\r\n            {row.map((letter, colIndex) => (\r\n              <div\r\n                key={colIndex}\r\n                style={{\r\n                  ...cellStyle,\r\n                  ...(selectedLetters.some((cell) => cell.row === rowIndex && cell.col === colIndex) ? selectedCellStyle : {}),\r\n                }}\r\n                onClick={() => handleSelection(rowIndex, colIndex)}\r\n              >\r\n                {letter}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={gameInfoStyle}>\r\n        <div>Score: {score}</div>\r\n        <div>Time: {timer} seconds</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItems;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;AAEtD,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EACnC,MAAMC,IAAI,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,EAAEG,CAAC,EAAE,EAAE;IAC7B,MAAMC,GAAG,GAAG,EAAE;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,EAAEI,CAAC,EAAE,EAAE;MAC7B,MAAMC,MAAM,GAAGC,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACxEP,GAAG,CAACQ,IAAI,CAACN,MAAM,CAAC;IAClB;IACAJ,IAAI,CAACU,IAAI,CAACR,GAAG,CAAC;EAChB;EACA,OAAOF,IAAI;AACb,CAAC;AAED,MAAMW,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACZ,IAAI,EAAEa,OAAO,CAAC,GAAGrB,QAAQ,CAACK,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAM2B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,QAAQ,CAAEG,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IACxC,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,eAAe,GAAGA,CAACtB,GAAG,EAAEuB,GAAG,KAAK;IACpC,MAAMC,kBAAkB,GAAG,CAAC,GAAGZ,eAAe,EAAE;MAAEZ,GAAG;MAAEuB;IAAI,CAAC,CAAC;IAC7DV,kBAAkB,CAACW,kBAAkB,CAAC;IAEtC,MAAMC,YAAY,GAAGD,kBAAkB,CAACE,GAAG,CAAC,CAAC;MAAE1B,GAAG;MAAEuB;IAAI,CAAC,KAAKzB,IAAI,CAACE,GAAG,CAAC,CAACuB,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC;IAEtFjC,QAAQ,CAACkC,OAAO,CAAEC,IAAI,IAAK;MACzB,IAAIJ,YAAY,KAAKI,IAAI,EAAE;QACzBd,QAAQ,CAAEe,SAAS,IAAKA,SAAS,GAAGD,IAAI,CAACE,MAAM,CAAC;QAChDlB,kBAAkB,CAAC,EAAE,CAAC;MACxB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMmB,cAAc,GAAG;IACrBC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE;EACb,CAAC;EAED,MAAMC,SAAS,GAAG;IAChBJ,OAAO,EAAE,MAAM;IACfK,mBAAmB,EAAE,iBAAiB;IAAE;IACxCC,GAAG,EAAE;EACP,CAAC;EAED,MAAMC,QAAQ,GAAG;IACfP,OAAO,EAAE;EACX,CAAC;EAED,MAAMQ,SAAS,GAAG;IAChBR,OAAO,EAAE,MAAM;IACfE,UAAU,EAAE,QAAQ;IACpBO,cAAc,EAAE,QAAQ;IACxBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,eAAe,EAAE,MAAM;IACvBC,MAAM,EAAE,gBAAgB;IACxBC,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMC,iBAAiB,GAAG;IACxBJ,eAAe,EAAE;EACnB,CAAC;EAED,MAAMK,aAAa,GAAG;IACpBd,SAAS,EAAE,MAAM;IACjBY,QAAQ,EAAE;EACZ,CAAC;EAED,oBACEvD,OAAA;IAAK0D,KAAK,EAAEnB,cAAe;IAAAoB,QAAA,gBACzB3D,OAAA;MAAK0D,KAAK,EAAEd,SAAU;MAAAe,QAAA,EACnBtD,IAAI,CAAC4B,GAAG,CAAC,CAAC1B,GAAG,EAAEqD,QAAQ,kBACtB5D,OAAA;QAAoB0D,KAAK,EAAEX,QAAS;QAAAY,QAAA,EACjCpD,GAAG,CAAC0B,GAAG,CAAC,CAACxB,MAAM,EAAEoD,QAAQ,kBACxB7D,OAAA;UAEE0D,KAAK,EAAE;YACL,GAAGV,SAAS;YACZ,IAAI7B,eAAe,CAAC2C,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACxD,GAAG,KAAKqD,QAAQ,IAAIG,IAAI,CAACjC,GAAG,KAAK+B,QAAQ,CAAC,GAAGL,iBAAiB,GAAG,CAAC,CAAC;UAC7G,CAAE;UACFQ,OAAO,EAAEA,CAAA,KAAMnC,eAAe,CAAC+B,QAAQ,EAAEC,QAAQ,CAAE;UAAAF,QAAA,EAElDlD;QAAM,GAPFoD,QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQV,CACN;MAAC,GAZMR,QAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAab,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpE,OAAA;MAAK0D,KAAK,EAAED,aAAc;MAAAE,QAAA,gBACxB3D,OAAA;QAAA2D,QAAA,GAAK,SAAO,EAACtC,KAAK;MAAA;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzBpE,OAAA;QAAA2D,QAAA,GAAK,QAAM,EAACpC,KAAK,EAAC,UAAQ;MAAA;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnD,EAAA,CA5FID,SAAS;AAAAqD,EAAA,GAATrD,SAAS;AA8Ff,eAAeA,SAAS;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}