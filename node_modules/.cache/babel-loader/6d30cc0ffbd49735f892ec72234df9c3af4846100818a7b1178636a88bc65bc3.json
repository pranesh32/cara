{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hi\\\\Documents\\\\reactjs\\\\firstproject\\\\ecommerce\\\\src\\\\components\\\\CartItems\\\\CartItems.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Word list suitable for kids\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wordList = ['CAT', 'DOG', 'SUN', 'MOON', 'BALL'];\nconst initialGrid = [['C', null, null, 'D', 'O', 'G'], ['A', null, 'S', null, 'A', null], ['T', null, 'U', null, 'L', null], ['B', null, 'N', null, 'L', null], ['A', null, null, 'S', null, null]];\nconst WordCrossword = () => {\n  _s();\n  const [grid, setGrid] = useState(initialGrid);\n  const [selectedWord, setSelectedWord] = useState('');\n  const [score, setScore] = useState(0);\n  const handleInputChange = (row, col, e) => {\n    const newGrid = [...grid];\n    newGrid[row][col] = e.target.value.toUpperCase();\n    setGrid(newGrid);\n    const currentWord = newGrid[row].join('');\n    if (wordList.includes(currentWord)) {\n      setSelectedWord(currentWord);\n      setScore(prevScore => prevScore + currentWord.length);\n    } else {\n      setSelectedWord('');\n    }\n  };\n  const containerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '50px'\n  };\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(6, 40px)',\n    gap: '2px'\n  };\n  const rowStyle = {\n    display: 'flex'\n  };\n  const cellStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '40px',\n    height: '40px',\n    backgroundColor: '#f5f5f5',\n    border: '1px solid #ccc',\n    fontSize: '18px',\n    fontWeight: 'bold',\n    color: '#333'\n  };\n  const selectedCellStyle = {\n    backgroundColor: '#aaddff'\n  };\n  const gameInfoStyle = {\n    marginTop: '20px',\n    fontSize: '18px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: rowStyle,\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            ...cellStyle,\n            ...(selectedWord && wordList.includes(selectedWord) ? {\n              backgroundColor: '#c3e6cb',\n              color: '#28a745'\n            } : {}),\n            ...(selectedWord === row.join('') ? selectedCellStyle : {})\n          },\n          maxLength: 1,\n          value: cell || '',\n          onChange: e => handleInputChange(rowIndex, colIndex, e)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gameInfoStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Selected Word: \", selectedWord]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(WordCrossword, \"zcJlrmOKy2u81sS2fjLDeS+a+8U=\");\n_c = WordCrossword;\nexport default WordCrossword;\nvar _c;\n$RefreshReg$(_c, \"WordCrossword\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","wordList","initialGrid","WordCrossword","_s","grid","setGrid","selectedWord","setSelectedWord","score","setScore","handleInputChange","row","col","e","newGrid","target","value","toUpperCase","currentWord","join","includes","prevScore","length","containerStyle","display","flexDirection","alignItems","marginTop","gridStyle","gridTemplateColumns","gap","rowStyle","cellStyle","justifyContent","width","height","backgroundColor","border","fontSize","fontWeight","color","selectedCellStyle","gameInfoStyle","style","children","map","rowIndex","cell","colIndex","maxLength","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hi/Documents/reactjs/firstproject/ecommerce/src/components/CartItems/CartItems.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Word list suitable for kids\r\nconst wordList = ['CAT', 'DOG', 'SUN', 'MOON', 'BALL'];\r\n\r\nconst initialGrid = [\r\n  ['C', null, null, 'D', 'O', 'G'],\r\n  ['A', null, 'S', null, 'A', null],\r\n  ['T', null, 'U', null, 'L', null],\r\n  ['B', null, 'N', null, 'L', null],\r\n  ['A', null, null, 'S', null, null],\r\n];\r\n\r\nconst WordCrossword = () => {\r\n  const [grid, setGrid] = useState(initialGrid);\r\n  const [selectedWord, setSelectedWord] = useState('');\r\n  const [score, setScore] = useState(0);\r\n\r\n  const handleInputChange = (row, col, e) => {\r\n    const newGrid = [...grid];\r\n    newGrid[row][col] = e.target.value.toUpperCase();\r\n    setGrid(newGrid);\r\n\r\n    const currentWord = newGrid[row].join('');\r\n    if (wordList.includes(currentWord)) {\r\n      setSelectedWord(currentWord);\r\n      setScore((prevScore) => prevScore + currentWord.length);\r\n    } else {\r\n      setSelectedWord('');\r\n    }\r\n  };\r\n\r\n  const containerStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '50px',\r\n  };\r\n\r\n  const gridStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(6, 40px)',\r\n    gap: '2px',\r\n  };\r\n\r\n  const rowStyle = {\r\n    display: 'flex',\r\n  };\r\n\r\n  const cellStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '40px',\r\n    height: '40px',\r\n    backgroundColor: '#f5f5f5',\r\n    border: '1px solid #ccc',\r\n    fontSize: '18px',\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  };\r\n\r\n  const selectedCellStyle = {\r\n    backgroundColor: '#aaddff',\r\n  };\r\n\r\n  const gameInfoStyle = {\r\n    marginTop: '20px',\r\n    fontSize: '18px',\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={gridStyle}>\r\n        {grid.map((row, rowIndex) => (\r\n          <div key={rowIndex} style={rowStyle}>\r\n            {row.map((cell, colIndex) => (\r\n              <input\r\n                key={colIndex}\r\n                style={{\r\n                  ...cellStyle,\r\n                  ...(selectedWord && wordList.includes(selectedWord) ? { backgroundColor: '#c3e6cb', color: '#28a745' } : {}),\r\n                  ...(selectedWord === row.join('') ? selectedCellStyle : {}),\r\n                }}\r\n                maxLength={1}\r\n                value={cell || ''}\r\n                onChange={(e) => handleInputChange(rowIndex, colIndex, e)}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={gameInfoStyle}>\r\n        <div>Score: {score}</div>\r\n        <div>Selected Word: {selectedWord}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordCrossword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}