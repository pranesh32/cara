{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hi\\\\Documents\\\\reactjs\\\\firstproject\\\\ecommerce\\\\src\\\\components\\\\CartItems\\\\CartItems.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Word list suitable for kids\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wordList = ['CAT', 'DOG', 'SUN', 'MOON', 'BALL'];\nconst generateGrid = (rows, cols) => {\n  const grid = [];\n  for (let i = 0; i < rows; i++) {\n    const row = [];\n    for (let j = 0; j < cols; j++) {\n      const letter = String.fromCharCode(65 + Math.floor(Math.random() * 6)); // Using letters A to F for simplicity\n      row.push({\n        letter,\n        isFound: false\n      });\n    }\n    grid.push(row);\n  }\n  return grid;\n};\nconst WordSearch = () => {\n  _s();\n  const [grid, setGrid] = useState(generateGrid(8, 8));\n  const [selectedLetters, setSelectedLetters] = useState([]);\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(60);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer(prevTimer => prevTimer - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleSelection = (row, col) => {\n    if (selectedLetters.length === 0 || adjacentCell(row, col)) {\n      const newSelectedLetters = [...selectedLetters, {\n        row,\n        col\n      }];\n      setSelectedLetters(newSelectedLetters);\n      const selectedWord = newSelectedLetters.map(({\n        row,\n        col\n      }) => grid[row][col].letter).join('');\n      wordList.forEach(word => {\n        if (selectedWord === word) {\n          setScore(prevScore => prevScore + word.length);\n          markWordAsFound(word);\n          setSelectedLetters([]);\n        }\n      });\n    } else {\n      setSelectedLetters([]);\n    }\n  };\n  const adjacentCell = (row, col) => {\n    if (selectedLetters.length === 0) return true;\n    const lastCell = selectedLetters[selectedLetters.length - 1];\n    return Math.abs(row - lastCell.row) <= 1 && Math.abs(col - lastCell.col) <= 1 && !(row === lastCell.row && col === lastCell.col);\n  };\n  const markWordAsFound = word => {\n    grid.forEach(row => {\n      row.forEach(cell => {\n        if (word.includes(cell.letter)) {\n          cell.isFound = true;\n        }\n      });\n    });\n    setGrid([...grid]);\n  };\n  const containerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '50px'\n  };\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(8, 50px)',\n    gap: '2px'\n  };\n  const rowStyle = {\n    display: 'flex'\n  };\n  const cellStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '50px',\n    height: '50px',\n    backgroundColor: '#f5f5f5',\n    border: '1px solid #ccc',\n    cursor: 'pointer',\n    fontSize: '24px',\n    fontWeight: 'bold',\n    color: '#333'\n  };\n  const selectedCellStyle = {\n    backgroundColor: '#aaddff'\n  };\n  const gameInfoStyle = {\n    marginTop: '20px',\n    fontSize: '18px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: rowStyle,\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...cellStyle,\n            ...(cell.isFound ? {\n              backgroundColor: '#c3e6cb',\n              color: '#28a745'\n            } : {}),\n            ...(selectedLetters.some(selectedCell => selectedCell.row === rowIndex && selectedCell.col === colIndex) ? selectedCellStyle : {})\n          },\n          onClick: () => handleSelection(rowIndex, colIndex),\n          children: cell.letter\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gameInfoStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Time: \", timer, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(WordSearch, \"S8KLYCo3rQzSJartwBRFmEqHEQU=\");\n_c = WordSearch;\nexport default WordSearch;\nvar _c;\n$RefreshReg$(_c, \"WordSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","wordList","generateGrid","rows","cols","grid","i","row","j","letter","String","fromCharCode","Math","floor","random","push","isFound","WordSearch","_s","setGrid","selectedLetters","setSelectedLetters","score","setScore","timer","setTimer","interval","setInterval","prevTimer","clearInterval","handleSelection","col","length","adjacentCell","newSelectedLetters","selectedWord","map","join","forEach","word","prevScore","markWordAsFound","lastCell","abs","cell","includes","containerStyle","display","flexDirection","alignItems","marginTop","gridStyle","gridTemplateColumns","gap","rowStyle","cellStyle","justifyContent","width","height","backgroundColor","border","cursor","fontSize","fontWeight","color","selectedCellStyle","gameInfoStyle","style","children","rowIndex","colIndex","some","selectedCell","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hi/Documents/reactjs/firstproject/ecommerce/src/components/CartItems/CartItems.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Word list suitable for kids\r\nconst wordList = ['CAT', 'DOG', 'SUN', 'MOON', 'BALL'];\r\n\r\nconst generateGrid = (rows, cols) => {\r\n  const grid = [];\r\n  for (let i = 0; i < rows; i++) {\r\n    const row = [];\r\n    for (let j = 0; j < cols; j++) {\r\n      const letter = String.fromCharCode(65 + Math.floor(Math.random() * 6)); // Using letters A to F for simplicity\r\n      row.push({ letter, isFound: false });\r\n    }\r\n    grid.push(row);\r\n  }\r\n  return grid;\r\n};\r\n\r\nconst WordSearch = () => {\r\n  const [grid, setGrid] = useState(generateGrid(8, 8));\r\n  const [selectedLetters, setSelectedLetters] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [timer, setTimer] = useState(60);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTimer((prevTimer) => prevTimer - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleSelection = (row, col) => {\r\n    if (selectedLetters.length === 0 || adjacentCell(row, col)) {\r\n      const newSelectedLetters = [...selectedLetters, { row, col }];\r\n      setSelectedLetters(newSelectedLetters);\r\n\r\n      const selectedWord = newSelectedLetters.map(({ row, col }) => grid[row][col].letter).join('');\r\n\r\n      wordList.forEach((word) => {\r\n        if (selectedWord === word) {\r\n          setScore((prevScore) => prevScore + word.length);\r\n          markWordAsFound(word);\r\n          setSelectedLetters([]);\r\n        }\r\n      });\r\n    } else {\r\n      setSelectedLetters([]);\r\n    }\r\n  };\r\n\r\n  const adjacentCell = (row, col) => {\r\n    if (selectedLetters.length === 0) return true;\r\n\r\n    const lastCell = selectedLetters[selectedLetters.length - 1];\r\n    return (\r\n      Math.abs(row - lastCell.row) <= 1 &&\r\n      Math.abs(col - lastCell.col) <= 1 &&\r\n      !(row === lastCell.row && col === lastCell.col)\r\n    );\r\n  };\r\n\r\n  const markWordAsFound = (word) => {\r\n    grid.forEach((row) => {\r\n      row.forEach((cell) => {\r\n        if (word.includes(cell.letter)) {\r\n          cell.isFound = true;\r\n        }\r\n      });\r\n    });\r\n    setGrid([...grid]);\r\n  };\r\n\r\n  const containerStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '50px',\r\n  };\r\n\r\n  const gridStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(8, 50px)',\r\n    gap: '2px',\r\n  };\r\n\r\n  const rowStyle = {\r\n    display: 'flex',\r\n  };\r\n\r\n  const cellStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '50px',\r\n    height: '50px',\r\n    backgroundColor: '#f5f5f5',\r\n    border: '1px solid #ccc',\r\n    cursor: 'pointer',\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  };\r\n\r\n  const selectedCellStyle = {\r\n    backgroundColor: '#aaddff',\r\n  };\r\n\r\n  const gameInfoStyle = {\r\n    marginTop: '20px',\r\n    fontSize: '18px',\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={gridStyle}>\r\n        {grid.map((row, rowIndex) => (\r\n          <div key={rowIndex} style={rowStyle}>\r\n            {row.map((cell, colIndex) => (\r\n              <div\r\n                key={colIndex}\r\n                style={{\r\n                  ...cellStyle,\r\n                  ...(cell.isFound ? { backgroundColor: '#c3e6cb', color: '#28a745' } : {}),\r\n                  ...(selectedLetters.some((selectedCell) => selectedCell.row === rowIndex && selectedCell.col === colIndex) ? selectedCellStyle : {}),\r\n                }}\r\n                onClick={() => handleSelection(rowIndex, colIndex)}\r\n              >\r\n                {cell.letter}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={gameInfoStyle}>\r\n        <div>Score: {score}</div>\r\n        <div>Time: {timer} seconds</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordSearch;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}