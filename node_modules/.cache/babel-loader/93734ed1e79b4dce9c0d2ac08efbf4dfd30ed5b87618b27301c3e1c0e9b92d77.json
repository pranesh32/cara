{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hi\\\\Documents\\\\reactjs\\\\firstproject\\\\ecommerce\\\\src\\\\components\\\\CartItems\\\\CartItems.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = ['🍎', '🍎', '🍌', '🍌', '🍒', '🍒', '🍇', '🍇', '🥕', '🥕', '🥑', '🥑', '🥭', '🥭', '🍓', '🍓'];\nconst shuffleArray = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\nconst Game = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [solved, setSolved] = useState([]);\n  useEffect(() => {\n    const shuffledImages = shuffleArray(images);\n    setCards(shuffledImages.map((image, index) => ({\n      id: index,\n      image\n    })));\n  }, []);\n  const handleCardClick = id => {\n    if (flipped.length === 2 || solved.includes(id)) return;\n    setFlipped([...flipped, id]);\n    if (flipped.length === 1) {\n      setTimeout(() => {\n        const [firstCard, secondCard] = flipped;\n        if (cards[firstCard].image === cards[id].image) {\n          setSolved([...solved, firstCard, id]);\n        }\n        setFlipped([]);\n      }, 1000); // Delay before flipping back cards\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"blue\",\n        alignItems: \"center\"\n      },\n      children: \"Emoji Memory Match: Can You Find the Pairs?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n      },\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleCardClick(card.id),\n        style: {\n          width: '80px',\n          height: '80px',\n          margin: '90px',\n          border: '1px solid #000',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          cursor: 'pointer',\n          fontSize: '36px',\n          backgroundColor: flipped.includes(card.id) || solved.includes(card.id) ? '#fff' : '#e0e0e0',\n          visibility: solved.includes(card.id) ? 'hidden' : 'visible',\n          borderRadius: '5px',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n          transition: 'transform 0.2s ease-in-out',\n          transform: flipped.includes(card.id) ? 'scale(1.1)' : 'scale(1)'\n        },\n        children: flipped.includes(card.id) || solved.includes(card.id) ? card.image : ''\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"CBKfUaOM2hI0OXxZYt7QsofeJyc=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","images","shuffleArray","array","i","length","j","Math","floor","random","Game","_s","cards","setCards","flipped","setFlipped","solved","setSolved","shuffledImages","map","image","index","id","handleCardClick","includes","setTimeout","firstCard","secondCard","children","style","color","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","justifyContent","card","onClick","width","height","margin","border","cursor","fontSize","backgroundColor","visibility","borderRadius","boxShadow","transition","transform","_c","$RefreshReg$"],"sources":["C:/Users/Hi/Documents/reactjs/firstproject/ecommerce/src/components/CartItems/CartItems.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst images = [\r\n  '🍎', '🍎', '🍌', '🍌', '🍒', '🍒', '🍇', '🍇', '🥕', '🥕', '🥑', '🥑', '🥭', '🥭', '🍓', '🍓'\r\n];\r\n\r\nconst shuffleArray = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\nconst Game = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [flipped, setFlipped] = useState([]);\r\n  const [solved, setSolved] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const shuffledImages = shuffleArray(images);\r\n    setCards(shuffledImages.map((image, index) => ({ id: index, image })));\r\n  }, []);\r\n\r\n  const handleCardClick = (id) => {\r\n    if (flipped.length === 2 || solved.includes(id)) return;\r\n\r\n    setFlipped([...flipped, id]);\r\n\r\n    if (flipped.length === 1) {\r\n      setTimeout(() => {\r\n        const [firstCard, secondCard] = flipped;\r\n        if (cards[firstCard].image === cards[id].image) {\r\n          setSolved([...solved, firstCard, id]);\r\n        }\r\n        setFlipped([]);\r\n      }, 1000); // Delay before flipping back cards\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{color:\"blue\", alignItems:\"center\"}}>Emoji Memory Match: Can You Find the Pairs?</h1>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        {cards.map((card) => (\r\n          <div\r\n            key={card.id}\r\n            onClick={() => handleCardClick(card.id)}\r\n            style={{\r\n              width: '80px',\r\n              height: '80px',\r\n              margin: '90px',\r\n              border: '1px solid #000',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              cursor: 'pointer',\r\n              fontSize: '36px',\r\n              backgroundColor: flipped.includes(card.id) || solved.includes(card.id) ? '#fff' : '#e0e0e0',\r\n              visibility: solved.includes(card.id) ? 'hidden' : 'visible',\r\n              borderRadius: '5px',\r\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n              transition: 'transform 0.2s ease-in-out',\r\n              transform: flipped.includes(card.id) ? 'scale(1.1)' : 'scale(1)'\r\n            }}\r\n          >\r\n            {flipped.includes(card.id) || solved.includes(card.id) ? card.image : ''}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAG,CACb,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAC/F;AAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACzC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,CAAC,CAAC,EAAEH,KAAK,CAACC,CAAC,CAAC,CAAC;EAC7C;EACA,OAAOD,KAAK;AACd,CAAC;AAED,MAAMO,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMoB,cAAc,GAAGhB,YAAY,CAACD,MAAM,CAAC;IAC3CY,QAAQ,CAACK,cAAc,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;MAAEC,EAAE,EAAED,KAAK;MAAED;IAAM,CAAC,CAAC,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAID,EAAE,IAAK;IAC9B,IAAIR,OAAO,CAACT,MAAM,KAAK,CAAC,IAAIW,MAAM,CAACQ,QAAQ,CAACF,EAAE,CAAC,EAAE;IAEjDP,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEQ,EAAE,CAAC,CAAC;IAE5B,IAAIR,OAAO,CAACT,MAAM,KAAK,CAAC,EAAE;MACxBoB,UAAU,CAAC,MAAM;QACf,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGb,OAAO;QACvC,IAAIF,KAAK,CAACc,SAAS,CAAC,CAACN,KAAK,KAAKR,KAAK,CAACU,EAAE,CAAC,CAACF,KAAK,EAAE;UAC9CH,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEU,SAAS,EAAEJ,EAAE,CAAC,CAAC;QACvC;QACAP,UAAU,CAAC,EAAE,CAAC;MAChB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;EACF,CAAC;EAED,oBACEf,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAI6B,KAAK,EAAE;QAACC,KAAK,EAAC,MAAM;QAAEC,UAAU,EAAC;MAAQ,CAAE;MAAAH,QAAA,EAAC;IAA2C;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChGnC,OAAA;MAAK6B,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAV,QAAA,EACzEhB,KAAK,CAACO,GAAG,CAAEoB,IAAI,iBACdvC,OAAA;QAEEwC,OAAO,EAAEA,CAAA,KAAMjB,eAAe,CAACgB,IAAI,CAACjB,EAAE,CAAE;QACxCO,KAAK,EAAE;UACLY,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,MAAM,EAAE,MAAM;UACdC,MAAM,EAAE,gBAAgB;UACxBR,OAAO,EAAE,MAAM;UACfE,cAAc,EAAE,QAAQ;UACxBP,UAAU,EAAE,QAAQ;UACpBc,MAAM,EAAE,SAAS;UACjBC,QAAQ,EAAE,MAAM;UAChBC,eAAe,EAAEjC,OAAO,CAACU,QAAQ,CAACe,IAAI,CAACjB,EAAE,CAAC,IAAIN,MAAM,CAACQ,QAAQ,CAACe,IAAI,CAACjB,EAAE,CAAC,GAAG,MAAM,GAAG,SAAS;UAC3F0B,UAAU,EAAEhC,MAAM,CAACQ,QAAQ,CAACe,IAAI,CAACjB,EAAE,CAAC,GAAG,QAAQ,GAAG,SAAS;UAC3D2B,YAAY,EAAE,KAAK;UACnBC,SAAS,EAAE,8BAA8B;UACzCC,UAAU,EAAE,4BAA4B;UACxCC,SAAS,EAAEtC,OAAO,CAACU,QAAQ,CAACe,IAAI,CAACjB,EAAE,CAAC,GAAG,YAAY,GAAG;QACxD,CAAE;QAAAM,QAAA,EAEDd,OAAO,CAACU,QAAQ,CAACe,IAAI,CAACjB,EAAE,CAAC,IAAIN,MAAM,CAACQ,QAAQ,CAACe,IAAI,CAACjB,EAAE,CAAC,GAAGiB,IAAI,CAACnB,KAAK,GAAG;MAAE,GApBnEmB,IAAI,CAACjB,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqBT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA1DID,IAAI;AAAA2C,EAAA,GAAJ3C,IAAI;AA4DV,eAAeA,IAAI;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}