{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hi\\\\Documents\\\\reactjs\\\\firstproject\\\\ecommerce\\\\src\\\\components\\\\CartItems\\\\CartItems.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport p8 from \"../Assets/f8.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: 'What is the capital of France?',\n  options: [{\n    text: 'Paris',\n    image: {\n      p8\n    }\n  }, {\n    text: 'London',\n    image: 'london.jpg'\n  }, {\n    text: 'Berlin',\n    image: 'berlin.jpg'\n  }, {\n    text: 'Rome',\n    image: 'rome.jpg'\n  }],\n  answer: 'Paris'\n}, {\n  question: 'How many continents are there in the world?',\n  options: ['5', '6', '7', '8'],\n  answer: '7'\n}, {\n  question: 'What is the largest planet in our solar system?',\n  options: ['Earth', 'Mars', 'Jupiter', 'Saturn'],\n  answer: 'Jupiter'\n}, {\n  question: 'Who painted the Mona Lisa?',\n  options: ['Leonardo da Vinci', 'Vincent van Gogh', 'Pablo Picasso', 'Michelangelo'],\n  answer: 'Leonardo da Vinci'\n}, {\n  question: 'Which is the largest mammal?',\n  options: ['Elephant', 'Blue Whale', 'Giraffe', 'Hippopotamus'],\n  answer: 'Blue Whale'\n}];\nconst Quiz = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [userAnswered, setUserAnswered] = useState(false);\n  const handleOptionSelect = option => {\n    if (!userAnswered) {\n      setSelectedOption(option);\n    }\n  };\n  const handleNextQuestion = () => {\n    setUserAnswered(true);\n    if (selectedOption === questions[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n    if (currentQuestion < questions.length - 1) {\n      setTimeout(() => {\n        setCurrentQuestion(currentQuestion + 1);\n        setSelectedOption('');\n        setUserAnswered(false);\n      }, 1000); // Delay before moving to the next question\n    } else {\n      setShowScore(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"You scored \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question \", currentQuestion + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-container\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === option.text ? 'selected' : '',\n          onClick: () => handleOptionSelect(option.text),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: option.image,\n            alt: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), selectedOption && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-button\",\n        onClick: handleNextQuestion,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n};\n_s(Quiz, \"dYY32GuFlBClqNGZgphAkCdYdFo=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","p8","jsxDEV","_jsxDEV","questions","question","options","text","image","answer","Quiz","_s","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","userAnswered","setUserAnswered","handleOptionSelect","option","handleNextQuestion","length","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Hi/Documents/reactjs/firstproject/ecommerce/src/components/CartItems/CartItems.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport p8 from  \"../Assets/f8.jpg\"\r\n\r\nconst questions = [\r\n  {\r\n    question: 'What is the capital of France?',\r\n    options:[{ text: 'Paris', image: {p8} },\r\n    { text: 'London', image: 'london.jpg' },\r\n    { text: 'Berlin', image: 'berlin.jpg' },\r\n    { text: 'Rome', image: 'rome.jpg' }],\r\n    answer: 'Paris'\r\n  },\r\n  {\r\n    question: 'How many continents are there in the world?',\r\n    options: ['5', '6', '7', '8'],\r\n    answer: '7'\r\n  },\r\n  {\r\n    question: 'What is the largest planet in our solar system?',\r\n    options: ['Earth', 'Mars', 'Jupiter', 'Saturn'],\r\n    answer: 'Jupiter'\r\n  },\r\n  {\r\n    question: 'Who painted the Mona Lisa?',\r\n    options: ['Leonardo da Vinci', 'Vincent van Gogh', 'Pablo Picasso', 'Michelangelo'],\r\n    answer: 'Leonardo da Vinci'\r\n  },\r\n  {\r\n    question: 'Which is the largest mammal?',\r\n    options: ['Elephant', 'Blue Whale', 'Giraffe', 'Hippopotamus'],\r\n    answer: 'Blue Whale'\r\n  }\r\n];\r\n\r\nconst Quiz = () => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [userAnswered, setUserAnswered] = useState(false);\r\n  \r\n    const handleOptionSelect = (option) => {\r\n      if (!userAnswered) {\r\n        setSelectedOption(option);\r\n      }\r\n    };\r\n  \r\n    const handleNextQuestion = () => {\r\n      setUserAnswered(true);\r\n      if (selectedOption === questions[currentQuestion].answer) {\r\n        setScore(score + 1);\r\n      }\r\n      if (currentQuestion < questions.length - 1) {\r\n        setTimeout(() => {\r\n          setCurrentQuestion(currentQuestion + 1);\r\n          setSelectedOption('');\r\n          setUserAnswered(false);\r\n        }, 1000); // Delay before moving to the next question\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"quiz-container\">\r\n        {showScore ? (\r\n          <div className=\"score-section\">\r\n            <h2>You scored {score} out of {questions.length}</h2>\r\n          </div>\r\n        ) : (\r\n          <div className=\"question-section\">\r\n            <h2>Question {currentQuestion + 1}</h2>\r\n            <div className=\"question-text\">{questions[currentQuestion].question}</div>\r\n            <div className=\"option-container\">\r\n              {questions[currentQuestion].options.map((option, index) => (\r\n                <button \r\n                  key={index} \r\n                  className={selectedOption === option.text ? 'selected' : ''} \r\n                  onClick={() => handleOptionSelect(option.text)}\r\n                >\r\n                  <img src={option.image} alt={option.text} />\r\n                  <span>{option.text}</span>\r\n                </button>\r\n              ))}\r\n            </div>\r\n            {selectedOption && (\r\n              <button className=\"next-button\" onClick={handleNextQuestion}>Next</button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Quiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}